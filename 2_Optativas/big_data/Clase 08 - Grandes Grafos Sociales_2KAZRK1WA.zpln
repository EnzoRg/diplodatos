{
  "paragraphs": [
    {
      "text": "print(s\"\"\"%html\n<center>\n    <h1><a href=\"http://diplodatos.famaf.unc.edu.ar/\">Diplomatura en Ciencia de Datos, Aprendizaje Automático y sus Aplicaciones</a></h1>\n    <h2>Curso <a href=\"https://sites.google.com/view/eleccion-optativas-diplodatos/programaci%C3%B3n-distribu%C3%ADda-sobre-grandes-vol%C3%BAmenes-de-datos\">Programación Distribuida sobre Grandes Volúmenes de Datos</a></h2>\n</center>\n\n<br>\n\n<h3 style=\"text-align:center;\"> Damián Barsotti  </h3>\n\n<h3 style=\"text-align:center;\">\n    <a href=\"http://www.famaf.unc.edu.ar\">\n    Facultad de Matemática Astronomía Física y Computación\n    </a>\n<br/>\n    <a href=\"http://www.unc.edu.ar\">\n    Universidad Nacional de Córdoba\n    </a>\n<br/>\n    <center>\n    <a href=\"http://www.famaf.unc.edu.ar\">\n    <img src=\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/comun/logo%20UNC%20FAMAF%202016.png\" alt=\"Drawing\" style=\"width:50%;\"/>\n    </a>\n    </center>\n</h3>\n\n<p style=\"font-size:15px;\">\n    <br />\n        This work is licensed under a\n        <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License</a>.\n    <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">\n        <img alt=\"Creative Commons License\" style=\"border-width:0;vertical-align:middle;float:right\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png\" />\n    </a>\n</p>\n\"\"\")\n",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:41:06+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<center>\n    <h1><a href=\"http://diplodatos.famaf.unc.edu.ar/\">Diplomatura en Ciencia de Datos, Aprendizaje Automático y sus Aplicaciones</a></h1>\n    <h2>Curso <a href=\"https://sites.google.com/view/eleccion-optativas-diplodatos/programaci%C3%B3n-distribu%C3%ADda-sobre-grandes-vol%C3%BAmenes-de-datos\">Programación Distribuida sobre Grandes Volúmenes de Datos</a></h2>\n</center>\n\n<br>\n\n<h3 style=\"text-align:center;\"> Damián Barsotti  </h3>\n\n<h3 style=\"text-align:center;\">\n    <a href=\"http://www.famaf.unc.edu.ar\">\n    Facultad de Matemática Astronomía Física y Computación\n    </a>\n<br/>\n    <a href=\"http://www.unc.edu.ar\">\n    Universidad Nacional de Córdoba\n    </a>\n<br/>\n    <center>\n    <a href=\"http://www.famaf.unc.edu.ar\">\n    <img src=\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/comun/logo%20UNC%20FAMAF%202016.png\" alt=\"Drawing\" style=\"width:50%;\"/>\n    </a>\n    </center>\n</h3>\n\n<p style=\"font-size:15px;\">\n    <br />\n        This work is licensed under a\n        <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License</a>.\n    <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">\n        <img alt=\"Creative Commons License\" style=\"border-width:0;vertical-align:middle;float:right\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png\" />\n    </a>\n</p>\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174951_799320623",
      "id": "20171010-191319_1407757246",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:41:06+0000",
      "dateFinished": "2024-10-31T01:41:06+0000",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:50644"
    },
    {
      "title": "Antes de comenzar",
      "text": "%md\n### Antes de comenzar\n1. Lanzar terminal\n1. Actualizar repo:\n```sh\ncd diplodatos_bigdata\ngit pull --recurse-submodules\n```\n1. Lanzar [Zeppelin](http://zeppelin.apache.org/) en docker:\n```sh\n./docker/zeppelin.sh\n```\n1. En navegador abrir [http://localhost:8080](http://localhost:8080)\n1. Seleccionar `Import note`\n1. Elegir json en `diplodatos_bigdata/clases/07_grafos/note.zpln`\n2. Seleccionar `Clase 07 - Grandes Grafos Sociales`\n",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:41:06+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "title": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Antes de comenzar</h3>\n<ol>\n<li>Lanzar terminal</li>\n<li>Actualizar repo:</li>\n</ol>\n<pre><code class=\"language-sh\">cd diplodatos_bigdata\ngit pull --recurse-submodules\n</code></pre>\n<ol>\n<li>Lanzar <a href=\"http://zeppelin.apache.org/\">Zeppelin</a> en docker:</li>\n</ol>\n<pre><code class=\"language-sh\">./docker/zeppelin.sh\n</code></pre>\n<ol>\n<li>En navegador abrir <a href=\"http://localhost:8080\">http://localhost:8080</a></li>\n<li>Seleccionar <code>Import note</code></li>\n<li>Elegir json en <code>diplodatos_bigdata/clases/07_grafos/note.zpln</code></li>\n<li>Seleccionar <code>Clase 07 - Grandes Grafos Sociales</code></li>\n</ol>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174951_466151461",
      "id": "20171026-104737_1316799732",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:41:06+0000",
      "dateFinished": "2024-10-31T01:41:06+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50645"
    },
    {
      "text": "%md\n# Grandes Grafos Sociales",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:41:06+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h1>Grandes Grafos Sociales</h1>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174952_1984662525",
      "id": "20171101-121050_1177283744",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:41:06+0000",
      "dateFinished": "2024-10-31T01:41:06+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50646"
    },
    {
      "text": "%md\n## GraphFrames\n\n* Utiliza la interface Spark SQL (Dataframes).\n* Creada por [Databricks](https://databricks.com/).\n* Por ahora no viene en la distribución estandard de Spark (solo [GraphX](http://spark.apache.org/graphx/) sobre RDD's).\n* Algoritmos ya implementados como: \n    - Breadth-first search (BFS)\n    - Componentes (fuertemente) conexas\n    - Label Propagation Algorithm (para detectar comunidades)\n    - PageRank\n    - Shortest paths\n    - Triangle count.\n* **Agregación de mensajes** para hacer algoritmos.\n* **Motif finding** para queries. \n\n### Documentación:\n\n* [User Guide](https://graphframes.github.io/graphframes/docs/_site/user-guide.html).\n* [User Guide - Python](https://docs.databricks.com/spark/latest/graph-analysis/graphframes/user-guide-python.html).\n* [Documentación de la API](https://graphframes.github.io/graphframes/docs/_site/api/python/index.html).\n",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:41:06+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>GraphFrames</h2>\n<ul>\n<li>Utiliza la interface Spark SQL (Dataframes).</li>\n<li>Creada por <a href=\"https://databricks.com/\">Databricks</a>.</li>\n<li>Por ahora no viene en la distribución estandard de Spark (solo <a href=\"http://spark.apache.org/graphx/\">GraphX</a> sobre RDD&rsquo;s).</li>\n<li>Algoritmos ya implementados como:\n<ul>\n<li>Breadth-first search (BFS)</li>\n<li>Componentes (fuertemente) conexas</li>\n<li>Label Propagation Algorithm (para detectar comunidades)</li>\n<li>PageRank</li>\n<li>Shortest paths</li>\n<li>Triangle count.</li>\n</ul>\n</li>\n<li><strong>Agregación de mensajes</strong> para hacer algoritmos.</li>\n<li><strong>Motif finding</strong> para queries.</li>\n</ul>\n<h3>Documentación:</h3>\n<ul>\n<li><a href=\"https://graphframes.github.io/graphframes/docs/_site/user-guide.html\">User Guide</a>.</li>\n<li><a href=\"https://docs.databricks.com/spark/latest/graph-analysis/graphframes/user-guide-python.html\">User Guide - Python</a>.</li>\n<li><a href=\"https://graphframes.github.io/graphframes/docs/_site/api/python/index.html\">Documentación de la API</a>.</li>\n</ul>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174952_437750405",
      "id": "20171102-112550_410534992",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:41:06+0000",
      "dateFinished": "2024-10-31T01:41:06+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50647"
    },
    {
      "text": "%md\n### Creación de grafo\n\n* Se crean a partir de `DataFrame` de aristas y/o vértices.\n* DataFrame de aristas debe tener las columnas `src` y `dst` (por lo menos).\n* DataFrame de vértices debe tener la columna `id` (por lo menos).\n* Los grafos son dirigidos.\n* Se almacenan con redundancia (vertex cut):\n  ![](http://spark.apache.org/docs/latest/img/edge_cut_vs_vertex_cut.png)\n\n",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:41:06+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Creación de grafo</h3>\n<ul>\n<li>Se crean a partir de <code>DataFrame</code> de aristas y/o vértices.</li>\n<li>DataFrame de aristas debe tener las columnas <code>src</code> y <code>dst</code> (por lo menos).</li>\n<li>DataFrame de vértices debe tener la columna <code>id</code> (por lo menos).</li>\n<li>Los grafos son dirigidos.</li>\n<li>Se almacenan con redundancia (vertex cut):<br />\n<img src=\"http://spark.apache.org/docs/latest/img/edge_cut_vs_vertex_cut.png\" alt=\"\" /></li>\n</ul>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174952_1726191907",
      "id": "20181027-002925_1222103561",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:41:06+0000",
      "dateFinished": "2024-10-31T01:41:06+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50648"
    },
    {
      "text": "%md\n### Veamos un ejemplo:\n",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:41:06+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Veamos un ejemplo:</h3>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174952_212199384",
      "id": "20201030-111511_962191836",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:41:06+0000",
      "dateFinished": "2024-10-31T01:41:06+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50649"
    },
    {
      "text": "%pyspark\n\nfrom graphframes import *\n\n# DataFrame de vértices\nv = spark.createDataFrame([\n  (\"a\", \"Alice\", 34),\n  (\"b\", \"Bob\", 36),\n  (\"c\", \"Charlie\", 30),\n  (\"d\", \"David\", 29),\n  (\"e\", \"Esther\", 32),\n  (\"f\", \"Fanny\", 36),\n  (\"g\", \"Gabby\", 60)\n],[\"id\", \"name\", \"age\"])\n\n# DataFrame de aristas\ne = spark.createDataFrame([\n  (\"a\", \"b\", \"amigo\"),\n  (\"b\", \"c\", \"sigue\"),\n  (\"c\", \"b\", \"sigue\"),\n  (\"f\", \"c\", \"sigue\"),\n  (\"e\", \"f\", \"sigue\"),\n  (\"e\", \"d\", \"amigo\"),\n  (\"d\", \"a\", \"amigo\"),\n  (\"a\", \"e\", \"amigo\"),\n  (\"a\", \"h\", \"amigo\")\n], [\"src\", \"dst\", \"relationship\"])\n\n# Creacion de GraphFrame\ng = GraphFrame(v, e)\n",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:41:06+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174952_2085101320",
      "id": "20181027-003337_2137373030",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:41:06+0000",
      "dateFinished": "2024-10-31T01:41:07+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50650"
    },
    {
      "text": "%pyspark\n\nz.show(g.vertices)\n",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:41:07+0000",
      "progress": 100,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "editorHide": false,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 304,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "name": "string",
                      "age": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "id\tname\tage\na\tAlice\t34\nb\tBob\t36\nc\tCharlie\t30\nd\tDavid\t29\ne\tEsther\t32\nf\tFanny\t36\ng\tGabby\t60\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=85",
              "$$hashKey": "object:52412"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=86",
              "$$hashKey": "object:52413"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174952_2136867985",
      "id": "20181027-004033_1700498403",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:41:07+0000",
      "dateFinished": "2024-10-31T01:41:07+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50651"
    },
    {
      "text": "%pyspark\n\nz.show(g.edges)\n",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:41:07+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "editorHide": false,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 356,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "src": "string",
                      "dst": "string",
                      "relationship": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "src\tdst\trelationship\na\tb\tamigo\nb\tc\tsigue\nc\tb\tsigue\nf\tc\tsigue\ne\tf\tsigue\ne\td\tamigo\nd\ta\tamigo\na\te\tamigo\na\th\tamigo\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=87",
              "$$hashKey": "object:52515"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=88",
              "$$hashKey": "object:52516"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174952_273822323",
      "id": "20181027-004041_1915960464",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:41:07+0000",
      "dateFinished": "2024-10-31T01:41:08+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50652"
    },
    {
      "text": "%pyspark\n\n# Query: Get in-degree of each vertex. Cantidad de aristas que llegan a cada vertice\nz.show(g.inDegrees)\n",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:41:08+0000",
      "progress": 25,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "inDegree": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "id\tinDegree\nc\t2\nb\t2\nf\t1\nd\t1\ne\t1\nh\t1\na\t1\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=89",
              "$$hashKey": "object:52618"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=90",
              "$$hashKey": "object:52619"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174952_1842131605",
      "id": "20191205-202553_1454342767",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:41:08+0000",
      "dateFinished": "2024-10-31T01:41:09+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50653"
    },
    {
      "text": "%pyspark\n\n\n# Query: Count the number of \"follow\" connections in the graph.\n\nprint(\"Cantidad de amistades:\", \n        g.edges.filter(\"relationship = 'amigo'\").count())\n\n",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:41:09+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Cantidad de amistades: 5\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=91",
              "$$hashKey": "object:52681"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=92",
              "$$hashKey": "object:52682"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174952_2079717822",
      "id": "20191205-202527_215305701",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:41:09+0000",
      "dateFinished": "2024-10-31T01:41:09+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50654"
    },
    {
      "text": "%md\n### PageRank\n\n#### Se calcula el Page Rank de cada página: $$PR(p_i) = \\frac{\\epsilon}{N} + (1-\\epsilon) \\sum_{p_j \\in M(p_i)} \\frac{PR (p_j)}{L(p_j)}$$\n* donde \\\\(N\\\\) es la cantidad de paginas, \n* \\\\(\\epsilon\\\\) es la probabilidad de quedarse en la pagina (*reset probability*), \n* \\\\(M(p_i)\\\\) son las páginas que apuntan a \\\\(p_i\\\\) y \n* \\\\(L(p_j)\\\\) es la cantidad e links de la página \\\\(p_j\\\\).\n\n\n![](https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/00_introduccion/page_rank.png)\n\n\nMás info en [PageRank](https://es.wikipedia.org/wiki/PageRank).",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:41:09+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>PageRank</h3>\n<h4>Se calcula el Page Rank de cada página: $$PR(p_i) = \\frac{\\epsilon}{N} + (1-\\epsilon) \\sum_{p_j \\in M(p_i)} \\frac{PR (p_j)}{L(p_j)}$$</h4>\n<ul>\n<li>donde \\(N\\) es la cantidad de paginas,</li>\n<li>\\(\\epsilon\\) es la probabilidad de quedarse en la pagina (<em>reset probability</em>),</li>\n<li>\\(M(p_i)\\) son las páginas que apuntan a \\(p_i\\) y</li>\n<li>\\(L(p_j)\\) es la cantidad e links de la página \\(p_j\\).</li>\n</ul>\n<p><img src=\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/00_introduccion/page_rank.png\" alt=\"\" /></p>\n<p>Más info en <a href=\"https://es.wikipedia.org/wiki/PageRank\">PageRank</a>.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174953_892874341",
      "id": "paragraph_1634844119648_1955861883",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:41:09+0000",
      "dateFinished": "2024-10-31T01:41:09+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50655"
    },
    {
      "title": "PageRank",
      "text": "%pyspark\n\n# Run PageRank algorithm, and show results.\nresults = g.pageRank(resetProbability=0.01, maxIter=10)\n\nz.show(results.vertices.select(\"id\", \"pagerank\"))\n",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:41:10+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": false,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {
                    "columns": [
                      {
                        "name": "id0",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "pagerank1",
                        "visible": true,
                        "width": "*",
                        "sort": {
                          "priority": 0,
                          "direction": "desc"
                        },
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      }
                    ],
                    "scrollFocus": {},
                    "selection": [],
                    "grouping": {
                      "grouping": [],
                      "aggregations": [],
                      "rowExpandedStates": {}
                    },
                    "treeView": {},
                    "pagination": {
                      "paginationCurrentPage": 1,
                      "paginationPageSize": 250
                    }
                  },
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "pagerank": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "id\tpagerank\ng\t0.011647254575707162\nf\t0.0347707909956736\ne\t0.03848486478566412\nd\t0.0347707909956736\nc\t3.206166434367738\nb\t3.6199424699159937\na\t0.05421739436354941\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=93",
              "$$hashKey": "object:52830"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=94",
              "$$hashKey": "object:52831"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=95",
              "$$hashKey": "object:52832"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=96",
              "$$hashKey": "object:52833"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=97",
              "$$hashKey": "object:52834"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=98",
              "$$hashKey": "object:52835"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=100",
              "$$hashKey": "object:52836"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=101",
              "$$hashKey": "object:52837"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=102",
              "$$hashKey": "object:52838"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=103",
              "$$hashKey": "object:52839"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=104",
              "$$hashKey": "object:52840"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=105",
              "$$hashKey": "object:52841"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=106",
              "$$hashKey": "object:52842"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=107",
              "$$hashKey": "object:52843"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=108",
              "$$hashKey": "object:52844"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=109",
              "$$hashKey": "object:52845"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=110",
              "$$hashKey": "object:52846"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=111",
              "$$hashKey": "object:52847"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=112",
              "$$hashKey": "object:52848"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=114",
              "$$hashKey": "object:52849"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=115",
              "$$hashKey": "object:52850"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174953_834566173",
      "id": "20191205-202719_809801770",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:41:10+0000",
      "dateFinished": "2024-10-31T01:41:43+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50656"
    },
    {
      "title": "Guardemos el grafo",
      "text": "%pyspark\nfrom pyspark.sql.functions import col\n\ng.edges.printSchema()\n\ng.edges \\\n        .select(col(\"src\").alias(\"Source\"), \n                col(\"dst\").alias(\"Target\"), \n                \"relationship\") \\\n        .coalesce(1) \\\n        .write \\\n        .csv(\"g_edges.csv\", mode=\"overwrite\", header=True)\n\ng.vertices.select(col(\"id\").alias(\"Label\")).coalesce(1).write.csv(\"g_vertex.csv\", mode=\"overwrite\", header=True)\n\n# Ver que pasa sin coalesce",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:41:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- src: string (nullable = true)\n |-- dst: string (nullable = true)\n |-- relationship: string (nullable = true)\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=116",
              "$$hashKey": "object:52988"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=117",
              "$$hashKey": "object:52989"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174953_886563981",
      "id": "20201029-163912_1652236873",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:41:44+0000",
      "dateFinished": "2024-10-31T01:41:44+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50657"
    },
    {
      "text": "%md\n## Ejemplo Red de Usuarios Twitter",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:41:45+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>Ejemplo Red de Usuarios Twitter</h2>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174953_814619732",
      "id": "20181024-105040_178046617",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:41:45+0000",
      "dateFinished": "2024-10-31T01:41:45+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50658"
    },
    {
      "title": "Load Tweets",
      "text": "%pyspark\n\ntweets = spark.read.parquet(\"../../diplodatos_bigdata/ds/tweets.pqt\")\n\nprint(\"Cantidad de tweets:\", tweets.count())\n\nz.show(tweets.limit(10))\n\n# RT_times es la cantidad de veces que se compartio el retweet",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:41:45+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": true,
        "results": {
          "1": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {
                    "columns": [
                      {
                        "name": "timestamp0",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "user1",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "RT_by2",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "RT_times3",
                        "visible": true,
                        "width": "*",
                        "sort": {
                          "priority": 0,
                          "direction": "desc"
                        },
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "text4",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      }
                    ],
                    "scrollFocus": {},
                    "selection": [],
                    "grouping": {
                      "grouping": [],
                      "aggregations": [],
                      "rowExpandedStates": {}
                    },
                    "treeView": {},
                    "pagination": {
                      "paginationCurrentPage": 1,
                      "paginationPageSize": 250
                    }
                  },
                  "tableColumnTypeState": {
                    "names": {
                      "timestamp": "string",
                      "user": "string",
                      "RT_by": "string",
                      "RT_times": "string",
                      "text": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Cantidad de tweets: 172040\n"
          },
          {
            "type": "TABLE",
            "data": "timestamp\tuser\tRT_by\tRT_times\ttext\n1487970896\tierrejon\tteresapititesa\t2\tRT @ierrejon: Aulas masificadas, falta de profesorado, precariedad laboral para docentes... ¿Así pretende el PP garantizar el fut…\n1487971010\tRobiBaradel\titoferrero\t1\tRT @RobiBaradel: Nos parece muy sano que los ciudadanos sumen su tiempo y su compromiso a la Educación Pública, los esperamos todo e…\n1487971052\tvilma_ripoll\tPabloIannuzzi\t3\tRT @vilma_ripoll: Los \"voluntarios\"contra el paro docente, son carneros. Los docentes defienden su salario y la escuela pública. Apoyemos e…\n1487971121\tfargosi\tPiaAsao\t3\tRT @fargosi: Hay otros medios de protesta. Las huelgas docentes son inconstitucionales por las convenciones de Derechos del Niño. Jueces, a…\n1487971177\tGFrondizi\ttepergmailcomP1\t3\tRT @GFrondizi: Pido algún fiscal por incumplimiento del deber de educar a los niños de la nación Pena con cárcel p baradel Exijo q…\n1487971184\tRobiBaradel\tAnaliavc1\t41\tRT @RobiBaradel: Nos parece muy sano que los ciudadanos sumen su tiempo y su compromiso a la Educación Pública, los esperamos todo e…\n1487971345\tSuperSecretario\tari2271\t12\tRT @SuperSecretario: #Cambiemos sacó solo 1,5% pq en su spot no prometió Voluntarios para reemplazar Docentes. Si se avivaban arrasaban!  h…\n1487971368\tMarinaVolpe12\tBocaLocura312\t1\tRT @MarinaVolpe12: No se ofrezcan nunca como Médicos voluntarios.Si hacen como MM, te saca el hígado y pide disculpas xq se equivovó #Volun…\n1487971408\tlanacionmas\tsusanamartimari\t2\tRT @lanacionmas: ¿Qué opinás de la propuesta #VoluntarioDocenteNoAlParo que se generó en las redes sociales a partir del paro nacional? #La…\n1487971469\taeronauticosCFK\tandrea7533\t17\tRT @aeronauticosCFK: #ApoyoALosMaestros Para estas cosas sobra la guita. Son patéticos https://t.co/6BW6eGZYpT\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=118",
              "$$hashKey": "object:53147"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=119",
              "$$hashKey": "object:53148"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=120",
              "$$hashKey": "object:53149"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=121",
              "$$hashKey": "object:53150"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174953_1946564098",
      "id": "20171101-124010_495006264",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:41:45+0000",
      "dateFinished": "2024-10-31T01:41:46+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50659"
    },
    {
      "text": "%md\n### Definición de la red de usuarios:\n\n* Queremos que un **usuario A esté conectado a usuario B** si A retweeteó algún mensaje de B.\n    - Relación **A** *\"sigue a\"* **B**.\n* Queremos también la cantidad de retweets que hizo B de mensajes de A **distintos o no**.",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:41:46+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Definición de la red de usuarios:</h3>\n<ul>\n<li>Queremos que un <strong>usuario A esté conectado a usuario B</strong> si A retweeteó algún mensaje de B.\n<ul>\n<li>Relación <strong>A</strong> <em>&ldquo;sigue a&rdquo;</em> <strong>B</strong>.</li>\n</ul>\n</li>\n<li>Queremos también la cantidad de retweets que hizo B de mensajes de A <strong>distintos o no</strong>.</li>\n</ul>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174953_1833368156",
      "id": "20181024-111922_1953182558",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:41:46+0000",
      "dateFinished": "2024-10-31T01:41:46+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50660"
    },
    {
      "title": "Generamos las conecciones por usuarios",
      "text": "%pyspark\n\nfrom pyspark.sql.functions import sum, count\n\ntwitterConnections = tweets \\\n                        .groupBy(\"user\", \"RT_by\") \\\n                        .agg(sum(\"RT_times\").alias(\"count_RT\"), count(\"*\").alias(\"count_distinct_RT\"))\n\nprint(\"Cantidad de conecciones:\", twitterConnections.count())\n\nz.show(twitterConnections.limit(20))\n",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:41:46+0000",
      "progress": 25,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "user": "string",
                      "RT_by": "string",
                      "count_RT": "string",
                      "count_distinct_RT": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          },
          "1": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "user": "string",
                      "RT_by": "string",
                      "count_RT": "string",
                      "count_distinct_RT": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Cantidad de conecciones: 152613\n"
          },
          {
            "type": "TABLE",
            "data": "user\tRT_by\tcount_RT\tcount_distinct_RT\nWolffWaldo\txenia43sailor\t69\t1\natlanticsurff\tpaulobeni\t8\t1\nRuben_Rischmann\tPPperonoelsapo\t23\t1\nWolffWaldo\tMariePes72\t14\t1\nromerodiario\tRcaRawson\t4\t1\npablen2012\tNattyJuliAle\t4\t1\nMaestroPortenio\tsamuelevyARG\t14\t1\nLaAlfareraOk\taka_Mister\t33\t1\nertenembaum\tfertso\t4\t1\nBrujaUniversal\tO_Fer_\t6\t1\nmis2centavos\tmapolo1978\t2\t1\nlucaslauriente\t_Felpa_\t1\t1\nPajaritaTW\toscarcapellini\t6\t1\nArgentinaSoy1\t88lamaga\t82\t1\nel_telegrafo\tamaia78\t1\t1\nDEM___\taquisiclaudia\t79\t1\nLauraadri\tarturomakko\t12\t1\nscorohernan\tgustavospektor\t6\t1\nCondenaNacional\tSyl_Vicious\t3\t1\nhanalfabeto\tOsvaM55\t18\t2\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=122",
              "$$hashKey": "object:53316"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=123",
              "$$hashKey": "object:53317"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=124",
              "$$hashKey": "object:53318"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=125",
              "$$hashKey": "object:53319"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=126",
              "$$hashKey": "object:53320"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174954_1278166130",
      "id": "20171101-121958_1394663112",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:41:46+0000",
      "dateFinished": "2024-10-31T01:41:48+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50661"
    },
    {
      "title": "Hay que renombrar las conexiones de tweeter:",
      "text": "%pyspark\n\nfrom pyspark.sql.functions import col\n\nedgesDF = twitterConnections \\\n    .select(col(\"RT_by\").alias(\"src\"),\n            col(\"user\").alias(\"dst\"),\n            \"count_RT\", \"count_distinct_RT\")\n                                       \nz.show(edgesDF.limit(10))\n",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:41:48+0000",
      "progress": 25,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "editorHide": false,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "src": "string",
                      "dst": "string",
                      "count_RT": "string",
                      "count_distinct_RT": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "src\tdst\tcount_RT\tcount_distinct_RT\nxenia43sailor\tWolffWaldo\t69\t1\npaulobeni\tatlanticsurff\t8\t1\nPPperonoelsapo\tRuben_Rischmann\t23\t1\nMariePes72\tWolffWaldo\t14\t1\nRcaRawson\tromerodiario\t4\t1\nNattyJuliAle\tpablen2012\t4\t1\nsamuelevyARG\tMaestroPortenio\t14\t1\naka_Mister\tLaAlfareraOk\t33\t1\nfertso\tertenembaum\t4\t1\nO_Fer_\tBrujaUniversal\t6\t1\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=127",
              "$$hashKey": "object:53434"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=128",
              "$$hashKey": "object:53435"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174954_1099716644",
      "id": "20171101-124136_101875926",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:41:48+0000",
      "dateFinished": "2024-10-31T01:41:49+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50662"
    },
    {
      "title": "Hay que crear el DF de vértices",
      "text": "%pyspark\n\nsrcs = edgesDF.select(col(\"src\").alias(\"id\"))\n\ndsts = edgesDF.select(col(\"dst\").alias(\"id\"))\n    \nvertexDF = srcs.unionAll(dsts).distinct()\n\nz.show(vertexDF.limit(10))\n    ",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:41:49+0000",
      "progress": 11,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "id\nOsvaM55\nyhernandez63\nrozerosas\nyonoevadi8000\nfefo41_marcelo\nLuciano2129\nPlatonPi\nMarceChristin\nchanedep\nLas12_Pagina12\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=129",
              "$$hashKey": "object:53537"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=130",
              "$$hashKey": "object:53538"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=131",
              "$$hashKey": "object:53539"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174954_1877689619",
      "id": "20191206-163757_2138250663",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:41:49+0000",
      "dateFinished": "2024-10-31T01:41:50+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50663"
    },
    {
      "title": "Creación de GraphFrame:",
      "text": "%pyspark\n\nfrom graphframes import *\n\ngraph = GraphFrame(vertexDF, edgesDF).cache()\n",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:41:50+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174954_203367598",
      "id": "20171101-124739_82230555",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:41:50+0000",
      "dateFinished": "2024-10-31T01:41:51+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50664"
    },
    {
      "text": "%md\n### Operaciones básicas sobre grafos\n\n#### A continuación veremos como calcular: \n* la cantidad de vértices (usuarios)\n* la cantidad de arístas (conexiones)\n* el grado de cada vértice (cantidad de conexiones por usuario)",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:41:51+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Operaciones básicas sobre grafos</h3>\n<h4>A continuación veremos como calcular:</h4>\n<ul>\n<li>la cantidad de vértices (usuarios)</li>\n<li>la cantidad de arístas (conexiones)</li>\n<li>el grado de cada vértice (cantidad de conexiones por usuario)</li>\n</ul>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174954_271895019",
      "id": "20171102-153102_880120870",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:41:51+0000",
      "dateFinished": "2024-10-31T01:41:51+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50665"
    },
    {
      "title": "Tamaño del grafo",
      "text": "%pyspark\n\nverticesCount = graph.vertices.count()\n\nedgesCount = graph.edges.count()\n\nprint(f\"\"\"%table\nCantidad de usuarios \\t Cantidad de conecciones\n{verticesCount} \\t {edgesCount}\"\"\")\n\n",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:41:51+0000",
      "progress": 100,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "Cantidad de usuarios ": "string",
                      " Cantidad de conecciones": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "Cantidad de usuarios \t Cantidad de conecciones\n57138 \t 152613\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=132",
              "$$hashKey": "object:53733"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=133",
              "$$hashKey": "object:53734"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=134",
              "$$hashKey": "object:53735"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=135",
              "$$hashKey": "object:53736"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174955_1696535551",
      "id": "20171101-124845_773490911",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:41:51+0000",
      "dateFinished": "2024-10-31T01:42:01+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50666"
    },
    {
      "title": "Cantidad de conecciones por usuario",
      "text": "%pyspark\n\nnodesDegree = graph.degrees\n\nsortedByDegree = nodesDegree.orderBy(\"degree\", ascending=False)\n\nz.show(sortedByDegree.limit(10))\n",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:42:01+0000",
      "progress": 90,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "degree": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "id\tdegree\nWinston_Dunhill\t2325\nfernandocarnota\t1745\nsantosjorgeh\t1657\nlanatoparatodos\t1529\nJorgeFavaloro\t1483\nRobiBaradel\t1483\nelcoya1977\t1471\neldestapeweb\t1441\nlucaslauriente\t1422\nbetovaldez\t1407\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=136",
              "$$hashKey": "object:53846"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=137",
              "$$hashKey": "object:53847"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174955_18903578",
      "id": "20171102-131720_1147432214",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:42:01+0000",
      "dateFinished": "2024-10-31T01:42:05+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50667"
    },
    {
      "text": "%md\n\n## Ejemplo Agregación de Mensajes\n\n### Influencia Colectiva\n\n#### Aplicaciones: \n* Marketing viral (influencia de opinión)\n* Detección de focos de dispersión de enfermedades\n* ...\n\n#### Cómo funciona:\n* Primero se calcula la **Influencia Colectiva (CI)**\n* En cada iteración elimina del grafo el nodo de mayor CI y recalcula el CI de los nodos restantes\n* Termina cuando la componente gigante se destruye\n* Solución básica: \\\\(O(N2)\\\\). Optimizada: \\\\(O(NlogN)\\\\)\n\n> Influence maximization in complex networks through optimal percolation” (Flaviano Morone, Hernán A. Makse, 27 Jun 2015) https://arxiv.org/abs/1506.08326\n\n\n",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:42:05+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>Ejemplo Agregación de Mensajes</h2>\n<h3>Influencia Colectiva</h3>\n<h4>Aplicaciones:</h4>\n<ul>\n<li>Marketing viral (influencia de opinión)</li>\n<li>Detección de focos de dispersión de enfermedades</li>\n<li>&hellip;</li>\n</ul>\n<h4>Cómo funciona:</h4>\n<ul>\n<li>Primero se calcula la <strong>Influencia Colectiva (CI)</strong></li>\n<li>En cada iteración elimina del grafo el nodo de mayor CI y recalcula el CI de los nodos restantes</li>\n<li>Termina cuando la componente gigante se destruye</li>\n<li>Solución básica: \\(O(N2)\\). Optimizada: \\(O(NlogN)\\)</li>\n</ul>\n<blockquote>\n<p>Influence maximization in complex networks through optimal percolation” (Flaviano Morone, Hernán A. Makse, 27 Jun 2015) <a href=\"https://arxiv.org/abs/1506.08326\">https://arxiv.org/abs/1506.08326</a></p>\n</blockquote>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174955_1115222041",
      "id": "20171102-132006_1774167041",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:42:05+0000",
      "dateFinished": "2024-10-31T01:42:05+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50668"
    },
    {
      "text": "%md\n### Fórmula de CI\n\nLa formula de collective influence para un vértice \\\\(i\\\\) es:\n\n$$ CI(i) = (degree_i -  1) \\times \\sum\\limits_{j \\in vecinos(i)} (degree_j -  1)$$\n\nSe supone un grafo **no dirigido**.\n\n### Pasos para calcular collective influence son:\n\n* agregar el grado (degree) de cada nodo al grafo.\n* importar `AggregateMessages`.\n* calcular collective influence de cada individuo usando `AggregateMessages` de `GraphFrame`\n* ordenar los individuos por su collective influence de mayor a menor\n* imprimir el listado de individuos\n\n\n#### Documentación para implementar con GraphFrames:\n\n* Documentación sobre [AggregateMessages](https://graphframes.github.io/graphframes/docs/_site/user-guide.html#message-passing-via-aggregatemessages) con ejemplo.\n* Documentación de [API AggregateMessages](https://graphframes.github.io/graphframes/docs/_site/api/python/graphframes.html).\n",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:42:05+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Fórmula de CI</h3>\n<p>La formula de collective influence para un vértice \\(i\\) es:</p>\n<p>$$ CI(i) = (degree_i -  1) \\times \\sum\\limits_{j \\in vecinos(i)} (degree_j -  1)$$</p>\n<p>Se supone un grafo <strong>no dirigido</strong>.</p>\n<h3>Pasos para calcular collective influence son:</h3>\n<ul>\n<li>agregar el grado (degree) de cada nodo al grafo.</li>\n<li>importar <code>AggregateMessages</code>.</li>\n<li>calcular collective influence de cada individuo usando <code>AggregateMessages</code> de <code>GraphFrame</code></li>\n<li>ordenar los individuos por su collective influence de mayor a menor</li>\n<li>imprimir el listado de individuos</li>\n</ul>\n<h4>Documentación para implementar con GraphFrames:</h4>\n<ul>\n<li>Documentación sobre <a href=\"https://graphframes.github.io/graphframes/docs/_site/user-guide.html#message-passing-via-aggregatemessages\">AggregateMessages</a> con ejemplo.</li>\n<li>Documentación de <a href=\"https://graphframes.github.io/graphframes/docs/_site/api/python/graphframes.html\">API AggregateMessages</a>.</li>\n</ul>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174955_1589962504",
      "id": "20171102-131904_821311339",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:42:05+0000",
      "dateFinished": "2024-10-31T01:42:05+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50669"
    },
    {
      "text": "%pyspark\n\nfrom pyspark.sql.functions import sum\nfrom graphframes.lib import AggregateMessages as AM\n\n#Creo un nuevo grafo con los nodos y su degree (disponible en nodesDegree) y las aristas originales\ndegreeGraph = GraphFrame(nodesDegree, graph.edges )\n# Aristas y vértices están bien particionadas\n\n\n# Comenzamos a calcular CI \n\n# Cada nodo envia su degree-1 a sus vecinos a traves de sus conecciones salientes y entrantes\nmsgToDst = AM.src[\"degree\"] - 1\nmsgToSrc = AM.dst[\"degree\"] - 1\n\n# El DataFrame sumNeighborDegrees debe tener 2 columnas: id del nodo y sum_neighbor_degree \nsumNeighborDegrees = degreeGraph.aggregateMessages(\n    sum(AM.msg).alias(\"sum_neighbor_degree\"), # Hace aggregation en cada nodo sobre los mensages recibidos \n    sendToDst=msgToDst, # Envia a vecino por coneccion saliente\n    sendToSrc=msgToSrc) # Envia a vecino por coneccion entrante\n\n\n# Join de sumNeighborDegrees con degrees para tener todas las columnas necesarias para calcular CI.\n\nnodesDegreeJoin = nodesDegree.join(sumNeighborDegrees,\"id\")\n\n# Calculamos CI: para terminar de calcularlo debemos multiplicar la sumatoria del paso anterior por degree - 1 de cada nodo.\n# El DataFrame collectiveInfluence debe tener 3 columnas: id, ci y degree\n# Por ultimo ordena descendentemente por ci \n\ncollectiveInfluence = nodesDegreeJoin \\\n                          .select( ((col(\"degree\") - 1) * col(\"sum_neighbor_degree\")).alias(\"ci\"), \n                                    \"id\", \n                                    \"degree\") \\\n                          .orderBy(\"ci\", ascending=False) \\\n                          .cache()\n\nz.show(collectiveInfluence.limit(20))\n",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:42:05+0000",
      "progress": 23,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "ci": "string",
                      "id": "string",
                      "degree": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "ci\tid\tdegree\n71551312\tWinston_Dunhill\t2325\n57822552\tsantosjorgeh\t1657\n55026688\tfernandocarnota\t1745\n45848634\tJorgeFavaloro\t1483\n42052088\tlanatoparatodos\t1529\n37856910\telcoya1977\t1471\n33925374\tbetovaldez\t1407\n31175045\tLaBelgrana\t606\n30129480\tfargosi\t1271\n29494764\tRobiBaradel\t1483\n27043120\tcopi__\t1041\n23379462\tNunkMasKs\t1027\n18770024\tConCiencia2015\t533\n17316472\tWolffWaldo\t812\n16165470\tHugoYasky\t987\n15975882\tmis2centavos\t1020\n15693120\teldestapeweb\t1441\n15118908\tCarlos_AD_Viola\t533\n14284499\tCTAok\t830\n14149350\tEdgardoRovira\t1176\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=143",
              "$$hashKey": "object:54041"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=144",
              "$$hashKey": "object:54042"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174955_929749697",
      "id": "20171101-125025_1054455316",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:42:05+0000",
      "dateFinished": "2024-10-31T01:42:31+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50670"
    },
    {
      "text": "%md\n## Motif Finding\n\n* Es un Domain-Specific Language (DSL) para expresar queries.\n* La unidad básica es la expresión de una arista\n\n### Ejemplos\n\n* `graph.find(\"(a)-[e]->(b); (b)-[e2]->(a)\")` expresa vértices unidos en ambas direcciones.\n    - Devuelve un DataFrame con columnas `\"a\"`, `\"b\"`, `\"e\"` y `\"e2\"`.\n* `graph.find(\"(a)-[e]->(b); (b)-[e2]->(c)\")` expresa dos aristas pegadas con un vértice común `b`. \n\n### Documentacion y ejemplo\n\n* [GraphFrame User Guide](https://graphframes.github.io/graphframes/docs/_site/user-guide.html#motif-finding).\n",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:42:31+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>Motif Finding</h2>\n<ul>\n<li>Es un Domain-Specific Language (DSL) para expresar queries.</li>\n<li>La unidad básica es la expresión de una arista</li>\n</ul>\n<h3>Ejemplos</h3>\n<ul>\n<li><code>graph.find(&quot;(a)-[e]-&gt;(b); (b)-[e2]-&gt;(a)&quot;)</code> expresa vértices unidos en ambas direcciones.\n<ul>\n<li>Devuelve un DataFrame con columnas <code>&quot;a&quot;</code>, <code>&quot;b&quot;</code>, <code>&quot;e&quot;</code> y <code>&quot;e2&quot;</code>.</li>\n</ul>\n</li>\n<li><code>graph.find(&quot;(a)-[e]-&gt;(b); (b)-[e2]-&gt;(c)&quot;)</code> expresa dos aristas pegadas con un vértice común <code>b</code>.</li>\n</ul>\n<h3>Documentacion y ejemplo</h3>\n<ul>\n<li><a href=\"https://graphframes.github.io/graphframes/docs/_site/user-guide.html#motif-finding\">GraphFrame User Guide</a>.</li>\n</ul>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174955_1236003523",
      "id": "20181027-013740_419047675",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:42:31+0000",
      "dateFinished": "2024-10-31T01:42:31+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50671"
    },
    {
      "text": "%md\n### Recordemos el grafo",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:42:31+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Recordemos el grafo</h3>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174955_1115618775",
      "id": "paragraph_1634934672760_445886262",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:42:31+0000",
      "dateFinished": "2024-10-31T01:42:31+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50672"
    },
    {
      "text": "%pyspark\nz.show(g.vertices)",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:42:31+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "name": "string",
                      "age": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "id\tname\tage\na\tAlice\t34\nb\tBob\t36\nc\tCharlie\t30\nd\tDavid\t29\ne\tEsther\t32\nf\tFanny\t36\ng\tGabby\t60\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=145",
              "$$hashKey": "object:54236"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=146",
              "$$hashKey": "object:54237"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174955_2014686169",
      "id": "paragraph_1634934258381_857174466",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:42:31+0000",
      "dateFinished": "2024-10-31T01:42:32+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50673"
    },
    {
      "text": "%pyspark\nz.show(g.edges)",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:42:32+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "src": "string",
                      "dst": "string",
                      "relationship": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "src\tdst\trelationship\na\tb\tamigo\nb\tc\tsigue\nc\tb\tsigue\nf\tc\tsigue\ne\tf\tsigue\ne\td\tamigo\nd\ta\tamigo\na\te\tamigo\na\th\tamigo\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=147",
              "$$hashKey": "object:54339"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=148",
              "$$hashKey": "object:54340"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174955_1322789819",
      "id": "paragraph_1634934349934_2020230166",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:42:32+0000",
      "dateFinished": "2024-10-31T01:42:32+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50674"
    },
    {
      "text": "%md\n### Hagamos algunos queries",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:42:32+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174955_672653370",
      "id": "paragraph_1634934687488_918172403",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50675"
    },
    {
      "text": "%pyspark\n\n# Buscar pares de vértices en ambas direccione:\nmotifs = g.find(\"(a)-[e1]->(b); (b)-[e2]->(a)\")\n\nmotifs.printSchema()\n",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:42:32+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- a: struct (nullable = false)\n |    |-- id: string (nullable = true)\n |    |-- name: string (nullable = true)\n |    |-- age: long (nullable = true)\n |-- e1: struct (nullable = false)\n |    |-- src: string (nullable = true)\n |    |-- dst: string (nullable = true)\n |    |-- relationship: string (nullable = true)\n |-- b: struct (nullable = false)\n |    |-- id: string (nullable = true)\n |    |-- name: string (nullable = true)\n |    |-- age: long (nullable = true)\n |-- e2: struct (nullable = false)\n |    |-- src: string (nullable = true)\n |    |-- dst: string (nullable = true)\n |    |-- relationship: string (nullable = true)\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174955_1604559227",
      "id": "20181027-015100_1394496292",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:42:32+0000",
      "dateFinished": "2024-10-31T01:42:32+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50676"
    },
    {
      "text": "%pyspark\n\nz.show(motifs)\n",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:42:32+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "a": "string",
                      "e1": "string",
                      "b": "string",
                      "e2": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "a\te1\tb\te2\n[c,Charlie,30]\t[c,b,sigue]\t[b,Bob,36]\t[b,c,sigue]\n[b,Bob,36]\t[b,c,sigue]\t[c,Charlie,30]\t[c,b,sigue]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=149",
              "$$hashKey": "object:54534"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=150",
              "$$hashKey": "object:54535"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=151",
              "$$hashKey": "object:54536"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=153",
              "$$hashKey": "object:54537"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=154",
              "$$hashKey": "object:54538"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174955_1354788421",
      "id": "20181027-015533_344573808",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:42:32+0000",
      "dateFinished": "2024-10-31T01:42:33+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50677"
    },
    {
      "text": "%pyspark\n# Despues se pueden aplicar filtros para queries mas complejos.\nz.show(motifs.filter(\"b.age > 30\"))\n",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:42:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "a": "string",
                      "e1": "string",
                      "b": "string",
                      "e2": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "a\te1\tb\te2\n[c,Charlie,30]\t[c,b,sigue]\t[b,Bob,36]\t[b,c,sigue]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=155",
              "$$hashKey": "object:54652"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=156",
              "$$hashKey": "object:54653"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=157",
              "$$hashKey": "object:54654"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=158",
              "$$hashKey": "object:54655"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=160",
              "$$hashKey": "object:54656"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=161",
              "$$hashKey": "object:54657"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174955_657974465",
      "id": "20201030-112416_1681452862",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:42:33+0000",
      "dateFinished": "2024-10-31T01:42:34+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50678"
    },
    {
      "text": "%md\n## Visualización\n\nA continuación visualizaremos con [Gephi](https://gephi.org/) la parte del grafo (subgrafo) que contiene los mayores influencers.\n\nPara ello generaremos archivos *csv* como entrada de esta herramienta ",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:42:34+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174955_1100273888",
      "id": "20171102-160936_360694508",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50679"
    },
    {
      "text": "%pyspark\n\nminCI = 29000000\nminDegree = 600\n\n# tomo los usarios con mayor influencia o con más conecciones\nciTops = collectiveInfluence \\\n    .filter((col(\"ci\") >= minCI) | (col(\"degree\") >= minDegree))\n\ngInfluencers = GraphFrame(ciTops, graph.edges)\n\n# Tomo solo las aristas que tengan vértices\nveTops = gInfluencers.find(\"(a)-[e]->(b)\") \\\n                .cache()\n      \n                \nprint(\"Cantidad de top influencers:\", veTops.count())\n\nveTops.printSchema()\n",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:42:34+0000",
      "progress": 31,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {
          "1": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "a": "string",
                      "e": "string",
                      "b": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Cantidad de top influencers: 35\nroot\n |-- a: struct (nullable = false)\n |    |-- ci: long (nullable = true)\n |    |-- id: string (nullable = true)\n |    |-- degree: integer (nullable = false)\n |-- e: struct (nullable = false)\n |    |-- src: string (nullable = true)\n |    |-- dst: string (nullable = true)\n |    |-- count_RT: long (nullable = true)\n |    |-- count_distinct_RT: long (nullable = false)\n |-- b: struct (nullable = false)\n |    |-- ci: long (nullable = true)\n |    |-- id: string (nullable = true)\n |    |-- degree: integer (nullable = false)\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=163",
              "$$hashKey": "object:54775"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=164",
              "$$hashKey": "object:54776"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174955_1377866272",
      "id": "20171102-000354_1806019706",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:42:34+0000",
      "dateFinished": "2024-10-31T01:42:39+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50680"
    },
    {
      "text": "%pyspark\n\neTops = veTops.select(\"e.*\")\n\neTops.printSchema()\n\n# Grafo de los tops\ngTops = GraphFrame(ciTops, eTops)\n\n\n# guardo un csv con los vertices para Gephi\n# Label es igual a la id\ngTops.vertices \\\n        .select(\"*\", col(\"id\").alias(\"Label\")) \\\n        .coalesce(1) \\\n        .write \\\n        .csv(\"conf/top_influencers.csv\", mode=\"overwrite\", header=True)\n\n# guardo un csv con las aristas para Gephi\ngTops.edges \\\n        .select(col(\"src\").alias(\"Source\"), \n                col(\"dst\").alias(\"Target\"), \n                \"count_RT\",\"count_distinct_RT\") \\\n        .coalesce(1) \\\n        .write \\\n        .csv(\"conf/top_edges.csv\", mode=\"overwrite\", header=True)\n",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:42:39+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- src: string (nullable = true)\n |-- dst: string (nullable = true)\n |-- count_RT: long (nullable = true)\n |-- count_distinct_RT: long (nullable = false)\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=165",
              "$$hashKey": "object:54838"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=166",
              "$$hashKey": "object:54839"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174956_1396926856",
      "id": "20181027-020144_852191582",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:42:39+0000",
      "dateFinished": "2024-10-31T01:42:40+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50681"
    },
    {
      "text": "%md\n### Gephi\n\nLanzar el programa desde una terminal ejecutando:\n\n```sh\ngephi-0.10.1/bin/gephi\n```\n\nSeguir las instrucciones del profesor.",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:42:40+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Gephi</h3>\n<p>Lanzar el programa desde una terminal ejecutando:</p>\n<pre><code class=\"language-sh\">gephi-0.10.1/bin/gephi\n</code></pre>\n<p>Seguir las instrucciones del profesor.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174956_591764847",
      "id": "20171102-161414_1207858851",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:42:40+0000",
      "dateFinished": "2024-10-31T01:42:40+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50682"
    },
    {
      "text": "%md\n### Ejercicio\n\nComplete el siguiente programa para calcular el grafo de todas las conexiones **desde** los 8 mayores influenciadores (influencia colectiva) y graficar el resultado con Gephi. \n\n#### Ayuda\n* Busque en la documentación [Api Datasets](https://spark.apache.org/docs/2.4.8/api/python/pyspark.sql.html#pyspark.sql.DataFrame) algún método que devuelva las *n* primeras files de un Dataset equivalente a la directiva SQL `LIMIT`. \n* Para llenar el comando `find` busque la documentación de [Motif finding](https://graphframes.github.io/graphframes/docs/_site/user-guide.html#motif-finding).\n* Cantidad de vertices = 120, cantidad de aristas = 122.",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T01:42:40+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 12,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Ejercicio</h3>\n<p>Complete el siguiente programa para calcular el grafo de todas las conexiones <strong>desde</strong> los 8 mayores influenciadores (influencia colectiva) y graficar el resultado con Gephi.</p>\n<h4>Ayuda</h4>\n<ul>\n<li>Busque en la documentación <a href=\"https://spark.apache.org/docs/2.4.8/api/python/pyspark.sql.html#pyspark.sql.DataFrame\">Api Datasets</a> algún método que devuelva las <em>n</em> primeras files de un Dataset equivalente a la directiva SQL <code>LIMIT</code>.</li>\n<li>Para llenar el comando <code>find</code> busque la documentación de <a href=\"https://graphframes.github.io/graphframes/docs/_site/user-guide.html#motif-finding\">Motif finding</a>.</li>\n<li>Cantidad de vertices = 120, cantidad de aristas = 122.</li>\n</ul>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174956_181164020",
      "id": "20171102-110542_600666434",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:42:40+0000",
      "dateFinished": "2024-10-31T01:42:40+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50683"
    },
    {
      "text": "%pyspark\n\ntopInfluencers = collectiveInfluence.orderBy(\"ci\", ascending=False).limit(8) # solo los 8 primeros\n\ngTops2 = GraphFrame(topInfluencers, graph.edges)\n\n# Solo las aristas que salen desde los tops\nres1 = gTops2.find(\"(a)-[e]->(b)\")\neTops2 = res1.select(\"e.src\", \"e.dst\")\n\nprint(\"Cantidad de aristas:\", eTops2.count())\n\n\n# Junto todos los vertices de las aristas\nvTops2s = eTops2.select(col(\"src\").alias(\"id\"))\nvTops2d = eTops2.select(col(\"dst\").alias(\"id\"))\nvTops2sd = vTops2s.union(vTops2d)\n\n# Agrego ci a los vertices con left join\nvTops2 = vTops2sd.join(collectiveInfluence, \"id\", \"left\").distinct()\n\nprint(\"Cantidad de vertices:\", vTops2.count())\n\n# Agrego columna con nombre para Gephi y guardo csv vertices\nvTops2.select(\"*\", col(\"id\").alias(\"Label\"))\\\n        .coalesce(1) \\\n        .write \\\n        .csv(\"logs/top_influencers2.csv\", mode=\"overwrite\", header=True)\n\n#print(\"Cantidad de aristas:\", eTops2.count())\n\n# Agrego columnas con nombres para Gephi y guardo csv aristas\neTops2.withColumnRenamed(\"src\", \"Source\")\\\n    .withColumnRenamed(\"dst\", \"Target\")\\\n    .coalesce(1)\\\n    .write \\\n    .csv(\"logs/top_edges2.csv\", mode=\"overwrite\", header=True)\n",
      "user": "anonymous",
      "dateUpdated": "2024-11-01T00:11:54+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 12,
        "results": {},
        "enabled": true,
        "lineNumbers": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Cantidad de aristas: 9\nCantidad de vertices: 8\nCantidad de aristas: 9\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=185",
              "$$hashKey": "object:54993"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=186",
              "$$hashKey": "object:54994"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=189",
              "$$hashKey": "object:54995"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=190",
              "$$hashKey": "object:54996"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=191",
              "$$hashKey": "object:54997"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=194",
              "$$hashKey": "object:54998"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=195",
              "$$hashKey": "object:54999"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=197",
              "$$hashKey": "object:55000"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=198",
              "$$hashKey": "object:55001"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=200",
              "$$hashKey": "object:55002"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174956_1155115666",
      "id": "paragraph_1666384803023_696454822",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-31T01:52:53+0000",
      "dateFinished": "2024-10-31T01:53:03+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50684"
    },
    {
      "text": "%md\n### Ejercicio\n\n0. Tomar el grafo de tweets y crear un dataframe con todas las aristas y vértices que forman triángulos dirigidos. O sea, todos los casos donde un usuario *A* retuitea a *B* que retuitea a *C* que retuitea a *A*.\n\n0. Hay casos donde los tres usuarios sean distintos?\n\n0. Graficar con Gephi el último resultado.\n\n#### Ayuda\n\n* Cantidad de vertices = 415, cantidad de aristas = 1006.\n",
      "user": "anonymous",
      "dateUpdated": "2024-10-17T14:28:40+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 12,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Ejercicio</h3>\n<ol start=\"0\">\n<li>\n<p>Tomar el grafo de tweets y crear un dataframe con todas las aristas y vértices que forman triángulos dirigidos. O sea, todos los casos donde un usuario <em>A</em> retuitea a <em>B</em> que retuitea a <em>C</em> que retuitea a <em>A</em>.</p>\n</li>\n<li>\n<p>Hay casos donde los tres usuarios sean distintos?</p>\n</li>\n<li>\n<p>Graficar con Gephi el último resultado.</p>\n</li>\n</ol>\n<h4>Ayuda</h4>\n<ul>\n<li>Cantidad de vertices = 415, cantidad de aristas = 1006.</li>\n</ul>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174956_1423972111",
      "id": "20201030-122513_420199213",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-17T14:28:40+0000",
      "dateFinished": "2024-10-17T14:28:40+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50685"
    },
    {
      "text": "%pyspark\n\nfrom graphframes import GraphFrame\n\ngraph = GraphFrame(vertexDF, edgesDF).cache()\n\ntriangulosDF = graph.find(\"(a)-[e1]->(b); (b)-[e2]->(c); (c)-[e3]->(a)\")\n\nz.show(triangulosDF.limit(20))\n",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T02:24:50+0000",
      "progress": 20,
      "config": {
        "lineNumbers": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 12,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "a": "string",
                      "e1": "string",
                      "b": "string",
                      "e2": "string",
                      "c": "string",
                      "e3": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "a\te1\tb\te2\tc\te3\n[ngelDavidNieva1]\t[ngelDavidNieva1,ngelDavidNieva1,30,2]\t[ngelDavidNieva1]\t[ngelDavidNieva1,ngelDavidNieva1,30,2]\t[ngelDavidNieva1]\t[ngelDavidNieva1,ngelDavidNieva1,30,2]\n[ONCA_TvR_Arg]\t[ONCA_TvR_Arg,ONCA_TvR_Arg,2,1]\t[ONCA_TvR_Arg]\t[ONCA_TvR_Arg,ONCA_TvR_Arg,2,1]\t[ONCA_TvR_Arg]\t[ONCA_TvR_Arg,ONCA_TvR_Arg,2,1]\n[judrh]\t[judrh,dccolectivo,2,1]\t[dccolectivo]\t[dccolectivo,mamibel09,35,1]\t[mamibel09]\t[mamibel09,judrh,8,1]\n[GabrielaMasista]\t[GabrielaMasista,agapearg51,58,1]\t[agapearg51]\t[agapearg51,adrianapellaca1,30,1]\t[adrianapellaca1]\t[adrianapellaca1,GabrielaMasista,108,3]\n[RuthPizzi]\t[RuthPizzi,rodolfoCeniz,5,1]\t[rodolfoCeniz]\t[rodolfoCeniz,PabloMGener,42,1]\t[PabloMGener]\t[PabloMGener,RuthPizzi,41,1]\n[C_Echegoyen]\t[C_Echegoyen,SandraDocente,108,3]\t[SandraDocente]\t[SandraDocente,RipamontiRita,15,1]\t[RipamontiRita]\t[RipamontiRita,C_Echegoyen,280,2]\n[waltervazquez21]\t[waltervazquez21,donofriojorge,18,3]\t[donofriojorge]\t[donofriojorge,donofriojorge,44,4]\t[donofriojorge]\t[donofriojorge,waltervazquez21,11,1]\n[waltervazquez21]\t[waltervazquez21,donofriojorge,18,3]\t[donofriojorge]\t[donofriojorge,Florenc32693350,11,1]\t[Florenc32693350]\t[Florenc32693350,waltervazquez21,6,1]\n[waltervazquez21]\t[waltervazquez21,donofriojorge,18,3]\t[donofriojorge]\t[donofriojorge,GurtzDario,11,1]\t[GurtzDario]\t[GurtzDario,waltervazquez21,7,1]\n[formacionIB]\t[formacionIB,formacionIB,6,1]\t[formacionIB]\t[formacionIB,CooperacionIB,12,2]\t[CooperacionIB]\t[CooperacionIB,formacionIB,6,1]\n[formacionIB]\t[formacionIB,formacionIB,6,1]\t[formacionIB]\t[formacionIB,Artesana63,6,1]\t[Artesana63]\t[Artesana63,formacionIB,2,1]\n[formacionIB]\t[formacionIB,formacionIB,6,1]\t[formacionIB]\t[formacionIB,formacionIB,6,1]\t[formacionIB]\t[formacionIB,formacionIB,6,1]\n[FRAlteBrown2017]\t[FRAlteBrown2017,PrensaMSilva,10,1]\t[PrensaMSilva]\t[PrensaMSilva,FRAlteBrown2017,3,1]\t[FRAlteBrown2017]\t[FRAlteBrown2017,FRAlteBrown2017,10,1]\n[FRAlteBrown2017]\t[FRAlteBrown2017,PrensaMSilva,10,1]\t[PrensaMSilva]\t[PrensaMSilva,PrensaMSilva,3,1]\t[PrensaMSilva]\t[PrensaMSilva,FRAlteBrown2017,3,1]\n[ConCiencia2015]\t[ConCiencia2015,lizzieyn,76,1]\t[lizzieyn]\t[lizzieyn,LaBelgrana,20,1]\t[LaBelgrana]\t[LaBelgrana,ConCiencia2015,510,3]\n[titocrespo5]\t[titocrespo5,titocrespo5,7,1]\t[titocrespo5]\t[titocrespo5,titocrespo5,7,1]\t[titocrespo5]\t[titocrespo5,titocrespo5,7,1]\n[jorgebrutus]\t[jorgebrutus,jorgebrutus,297,9]\t[jorgebrutus]\t[jorgebrutus,jorgebrutus,297,9]\t[jorgebrutus]\t[jorgebrutus,jorgebrutus,297,9]\n[Colejobs]\t[Colejobs,Colejobs,6,2]\t[Colejobs]\t[Colejobs,Colejobs,6,2]\t[Colejobs]\t[Colejobs,Colejobs,6,2]\n[PatriciaConti9]\t[PatriciaConti9,Carlos_AD_Viola,36,1]\t[Carlos_AD_Viola]\t[Carlos_AD_Viola,lilifinochietta,59,1]\t[lilifinochietta]\t[lilifinochietta,PatriciaConti9,69,1]\n[interinosMAD]\t[interinosMAD,ajfernandez2001,52,4]\t[ajfernandez2001]\t[ajfernandez2001,MargaMachnJimne,11,1]\t[MargaMachnJimne]\t[MargaMachnJimne,interinosMAD,4,1]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=247",
              "$$hashKey": "object:55182"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=248",
              "$$hashKey": "object:55183"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729101391834_1771682885",
      "id": "paragraph_1729101391834_1771682885",
      "dateCreated": "2024-10-16T17:56:31+0000",
      "dateStarted": "2024-10-31T02:24:50+0000",
      "dateFinished": "2024-10-31T02:24:52+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50686"
    },
    {
      "text": "%pyspark\n\ndistinctTriangulosDF = triangulosDF.filter(\"a.id != b.id AND b.id != c.id AND a.id != c.id\")\n\nz.show(distinctTriangulosDF.limit(20))",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T02:24:56+0000",
      "progress": 42,
      "config": {
        "lineNumbers": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 12,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "a": "string",
                      "e1": "string",
                      "b": "string",
                      "e2": "string",
                      "c": "string",
                      "e3": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "a\te1\tb\te2\tc\te3\n[judrh]\t[judrh,dccolectivo,2,1]\t[dccolectivo]\t[dccolectivo,mamibel09,35,1]\t[mamibel09]\t[mamibel09,judrh,8,1]\n[GabrielaMasista]\t[GabrielaMasista,agapearg51,58,1]\t[agapearg51]\t[agapearg51,adrianapellaca1,30,1]\t[adrianapellaca1]\t[adrianapellaca1,GabrielaMasista,108,3]\n[RuthPizzi]\t[RuthPizzi,rodolfoCeniz,5,1]\t[rodolfoCeniz]\t[rodolfoCeniz,PabloMGener,42,1]\t[PabloMGener]\t[PabloMGener,RuthPizzi,41,1]\n[C_Echegoyen]\t[C_Echegoyen,SandraDocente,108,3]\t[SandraDocente]\t[SandraDocente,RipamontiRita,15,1]\t[RipamontiRita]\t[RipamontiRita,C_Echegoyen,280,2]\n[waltervazquez21]\t[waltervazquez21,donofriojorge,18,3]\t[donofriojorge]\t[donofriojorge,Florenc32693350,11,1]\t[Florenc32693350]\t[Florenc32693350,waltervazquez21,6,1]\n[waltervazquez21]\t[waltervazquez21,donofriojorge,18,3]\t[donofriojorge]\t[donofriojorge,GurtzDario,11,1]\t[GurtzDario]\t[GurtzDario,waltervazquez21,7,1]\n[ConCiencia2015]\t[ConCiencia2015,lizzieyn,76,1]\t[lizzieyn]\t[lizzieyn,LaBelgrana,20,1]\t[LaBelgrana]\t[LaBelgrana,ConCiencia2015,510,3]\n[PatriciaConti9]\t[PatriciaConti9,Carlos_AD_Viola,36,1]\t[Carlos_AD_Viola]\t[Carlos_AD_Viola,lilifinochietta,59,1]\t[lilifinochietta]\t[lilifinochietta,PatriciaConti9,69,1]\n[interinosMAD]\t[interinosMAD,ajfernandez2001,52,4]\t[ajfernandez2001]\t[ajfernandez2001,MargaMachnJimne,11,1]\t[MargaMachnJimne]\t[MargaMachnJimne,interinosMAD,4,1]\n[interinosMAD]\t[interinosMAD,ajfernandez2001,52,4]\t[ajfernandez2001]\t[ajfernandez2001,sariogallardo,11,1]\t[sariogallardo]\t[sariogallardo,interinosMAD,24,2]\n[interinosMAD]\t[interinosMAD,ajfernandez2001,52,4]\t[ajfernandez2001]\t[ajfernandez2001,AccesojustoNAD,11,1]\t[AccesojustoNAD]\t[AccesojustoNAD,interinosMAD,30,2]\n[interinosMAD]\t[interinosMAD,ajfernandez2001,52,4]\t[ajfernandez2001]\t[ajfernandez2001,JuanaSinarco3,22,2]\t[JuanaSinarco3]\t[JuanaSinarco3,interinosMAD,13,1]\n[MartaLiliaRiva1]\t[MartaLiliaRiva1,kiwiportuario,8,1]\t[kiwiportuario]\t[kiwiportuario,normymdq,707,7]\t[normymdq]\t[normymdq,MartaLiliaRiva1,36,1]\n[Jennifer_Fari]\t[Jennifer_Fari,Laura_Capurro,28,1]\t[Laura_Capurro]\t[Laura_Capurro,Mariel_UdocbaSN,324,4]\t[Mariel_UdocbaSN]\t[Mariel_UdocbaSN,Jennifer_Fari,80,1]\n[mavirginiagomez]\t[mavirginiagomez,PTSarg,49,1]\t[PTSarg]\t[PTSarg,LiluzLisam,14,1]\t[LiluzLisam]\t[LiluzLisam,mavirginiagomez,9,1]\n[mavirginiagomez]\t[mavirginiagomez,PTSarg,49,1]\t[PTSarg]\t[PTSarg,chipicastillo,14,1]\t[chipicastillo]\t[chipicastillo,mavirginiagomez,11,1]\n[mavirginiagomez]\t[mavirginiagomez,PTSarg,49,1]\t[PTSarg]\t[PTSarg,payasobarricada,14,1]\t[payasobarricada]\t[payasobarricada,mavirginiagomez,6,1]\n[mavirginiagomez]\t[mavirginiagomez,PTSarg,49,1]\t[PTSarg]\t[PTSarg,NicolasdelCano,56,4]\t[NicolasdelCano]\t[NicolasdelCano,mavirginiagomez,26,2]\n[mavirginiagomez]\t[mavirginiagomez,PTSarg,49,1]\t[PTSarg]\t[PTSarg,Fte_Izquierda,14,1]\t[Fte_Izquierda]\t[Fte_Izquierda,mavirginiagomez,26,2]\n[tapetolomei]\t[tapetolomei,maraluz2015,54,1]\t[maraluz2015]\t[maraluz2015,marianavogler10,18,1]\t[marianavogler10]\t[marianavogler10,tapetolomei,128,1]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=252",
              "$$hashKey": "object:55285"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=253",
              "$$hashKey": "object:55286"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729132513385_1149313782",
      "id": "paragraph_1729132513385_1149313782",
      "dateCreated": "2024-10-17T02:35:13+0000",
      "dateStarted": "2024-10-31T02:24:56+0000",
      "dateFinished": "2024-10-31T02:24:59+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50687"
    },
    {
      "text": "%pyspark\n\ndistinctVerticesDF = distinctTriangulosDF.select(\"a.id\").union(distinctTriangulosDF.select(\"b.id\")).union(distinctTriangulosDF.select(\"c.id\")).distinct()\n\ndistinctVerticesDF.withColumnRenamed(\"id\", \"Label\").coalesce(1).write.csv(\"conf/triangles_vertices.csv\", mode=\"overwrite\", header=True)\n\ndistinctEdgesDF = distinctTriangulosDF.select(\"e1.src\", \"e1.dst\").union(distinctTriangulosDF.select(\"e2.src\", \"e2.dst\")).union(distinctTriangulosDF.select(\"e3.src\", \"e3.dst\")).distinct()\n\ndistinctEdgesDF.withColumnRenamed(\"src\", \"Source\").withColumnRenamed(\"dst\", \"Target\").coalesce(1).write.csv(\"conf/triangles_edges.csv\", mode=\"overwrite\", header=True)\n\ncantidad_vertices = graph.vertices.count()\ncantidad_aristas = graph.edges.count()\n\nprint(\"Cantidad de vertices:\", cantidad_vertices)\nprint(\"Cantidad de aristas:\", cantidad_aristas)\nprint(\"Cantidad de triangulos con usuarios distintos:\", distinctTriangulosDF.count())\n",
      "user": "anonymous",
      "dateUpdated": "2024-10-31T02:31:44+0000",
      "progress": 44,
      "config": {
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 12,
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "lineNumbers": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Cantidad de vertices: 57138\nCantidad de aristas: 152613\nCantidad de triangulos con usuarios distintos: 1551\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=277",
              "$$hashKey": "object:55348"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=278",
              "$$hashKey": "object:55349"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=283",
              "$$hashKey": "object:55350"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=284",
              "$$hashKey": "object:55351"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=285",
              "$$hashKey": "object:55352"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=286",
              "$$hashKey": "object:55353"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=287",
              "$$hashKey": "object:55354"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=288",
              "$$hashKey": "object:55355"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=292",
              "$$hashKey": "object:55356"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=293",
              "$$hashKey": "object:55357"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729132594662_193132397",
      "id": "paragraph_1729132594662_193132397",
      "dateCreated": "2024-10-17T02:36:34+0000",
      "dateStarted": "2024-10-31T02:31:44+0000",
      "dateFinished": "2024-10-31T02:32:00+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50688"
    },
    {
      "title": "FIN",
      "text": "val baseDir=\"https://git.cs.famaf.unc.edu.ar/dbarsotti/diplodatos_bigdata/raw/master/clases\"\n\nz.put(\"baseDir\", baseDir)\nprint(\"\"\"%html\n<script>\n    var heads = document.getElementsByTagName('h2');\n    var numHeads = heads.length;\n    var inner = \"\";\n    var i = 0;\n    var j = 0;\n    while (i < numHeads){\n        inner = heads[i].innerHTML;\n        if (inner.search(\".-\") != -1 ) {\n            j++;\n            heads[i].innerHTML = inner.replace(/(~|\\d+)\\.-/,\"\"+j+\".-\");\n        }\n        i++\n    }\n</script>\n\"\"\")\n",
      "user": "anonymous",
      "dateUpdated": "2024-10-17T14:29:03+0000",
      "progress": 0,
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "scala"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<script>\n    var heads = document.getElementsByTagName('h2');\n    var numHeads = heads.length;\n    var inner = \"\";\n    var i = 0;\n    var j = 0;\n    while (i < numHeads){\n        inner = heads[i].innerHTML;\n        if (inner.search(\".-\") != -1 ) {\n            j++;\n            heads[i].innerHTML = inner.replace(/(~|\\d+)\\.-/,\"\"+j+\".-\");\n        }\n        i++\n    }\n</script>\n\u001b[1m\u001b[34mbaseDir\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m = https://git.cs.famaf.unc.edu.ar/dbarsotti/diplodatos_bigdata/raw/master/clases\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1729091174956_424433733",
      "id": "20171010-191336_1667301043",
      "dateCreated": "2024-10-16T15:06:14+0000",
      "dateStarted": "2024-10-17T14:29:03+0000",
      "dateFinished": "2024-10-17T14:29:03+0000",
      "status": "FINISHED",
      "$$hashKey": "object:50689"
    }
  ],
  "name": "Clase 08 - Grandes Grafos Sociales",
  "id": "2KAZRK1WA",
  "defaultInterpreterGroup": "spark",
  "version": "0.11.2",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {},
  "path": "/Clase 08 - Grandes Grafos Sociales"
}